class(res$GeneID)
class(res$GeneID)
annots <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
annots
View(annots)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
id_to_symbol
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
View(res_symb)
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
res_symb_test <- inner_join(res, id_to_symbol)
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
res_symb_test <- inner_join(res, id_to_symbol)
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL) %>%
res_simp
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL) %>%
# res_simp
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL)
# res_simp
View(res)
View(res_simp)
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL)
res_simp
library(fgsea)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("fgsea")
library(fgsea)
# Create named vector of gene-level statistics
ranks <- deframe(res_simp)
head(ranks, 20)
# Load the pathways into a named list
pathways.food_allergy <- gmtPathways("..\\..\\gsea\\gene_sets\\HP_FOOD_ALLERGY.v2023.1.Hs.gmt")
# Look at them all if you want (uncomment)
pathways.food_allergy
# Show the first few pathways, and within those, show only the first few genes.
pathways.food_allergy %>%
head() %>%
lapply(head)
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks, nperm=1000)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
install.packages('DT')
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
plotEnrichment(pathways[["HP_FOOD_ALLERGY"]],
ranks)
plotEnrichment(pathways.food_allergy[["HP_FOOD_ALLERGY"]],
ranks)
library(tidyverse)
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_resolved_baseline_genomewide.csv")
res
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db")
# Convert GeneID column values from numeric to character
res$GeneID <- as.character(res$GeneID)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
id_to_symbol
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL)
res_simp
# Install fgsea package
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("fgsea")
knitr::opts_chunk$set(echo = TRUE)
# Load the pathways into a named list
pathways.allergy <- gmtPathways("..\\..\\gsea\\gene_sets\\HP_ALLERGY.v2023.1.Hs.gmt")
# Look at them all if you want (uncomment)
pathways.allergy
# Show the first few pathways, and within those, show only the first few genes.
pathways.allergy %>%
head() %>%
lapply(head)
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks, nperm=1000)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
plotEnrichment(pathways.food_allergy[["HP_FOOD_ALLERGY"]],
ranks)
plotEnrichment(pathways.allergy[["HP_FOOD_ALLERGY"]],
ranks)
knitr::opts_chunk$set(echo = TRUE)
# Load the pathways into a named list
pathways.food_int <- gmtPathways("..\\..\\gsea\\gene_sets\\HP_FOOD_INTOLERANCE.v2023.1.Hs.gmt")
# Look at them all if you want (uncomment)
pathways.food_int
# Show the first few pathways, and within those, show only the first few genes.
pathways.food_int %>%
head() %>%
lapply(head)
fgseaRes <- fgsea(pathways=pathways.food_int, stats=ranks, nperm=1000)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
plotEnrichment(pathways.food_int[["HP_FOOD_INTOLERANCE"]],
ranks)
plotEnrichment(pathways.allergy[["HP_FOOD_ALLERGY"]],
ranks)
git pull origin master
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_followup_genomewide.csv")
knitr::opts_chunk$set(echo = TRUE)
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_resolved_baseline_genomewide.csv")
res
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_resolved_followup_genomewide.csv")
res
# Convert GeneID column values from numeric to character
res$GeneID <- as.character(res$GeneID)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
library(tidyverse)
library(tidyverse)
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_resolved_followup_genomewide.csv")
res
# Convert GeneID column values from numeric to character
res$GeneID <- as.character(res$GeneID)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
# Load package
library(org.Hs.eg.db)
# Convert GeneID column values from numeric to character
res$GeneID <- as.character(res$GeneID)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
id_to_symbol
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL)
res_simp
# Create named vector of gene-level statistics
ranks <- deframe(res_simp)
head(ranks, 20)
# Load the pathways into a named list
pathways.food_allergy <- gmtPathways("..\\..\\gsea\\gene_sets\\HP_FOOD_ALLERGY.v2023.1.Hs.gmt")
# Install fgsea package
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
#
# BiocManager::install("fgsea")
library(fgsea)
# Create named vector of gene-level statistics
ranks <- deframe(res_simp)
head(ranks, 20)
# Load the pathways into a named list
pathways.food_allergy <- gmtPathways("..\\..\\gsea\\gene_sets\\HP_FOOD_ALLERGY.v2023.1.Hs.gmt")
# Look at them all if you want (uncomment)
pathways.food_allergy
# Show the first few pathways, and within those, show only the first few genes.
pathways.food_allergy %>%
head() %>%
lapply(head)
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks, nperm=1000)
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks)
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
library(tidyverse)
library(dplyr)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks, nperm=1000)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
# dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
plotEnrichment(pathways.food_allergy[["HP_FOOD_ALLERGY"]],
ranks)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_resolved_followup_genomewide.csv")
res
# Load package
library(org.Hs.eg.db)
# Convert GeneID column values from numeric to character
res$GeneID <- as.character(res$GeneID)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
id_to_symbol
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL)
res_simp
# Install fgsea package
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
#
# BiocManager::install("fgsea")
library(fgsea)
# Create named vector of gene-level statistics
ranks <- deframe(res_simp)
head(ranks, 20)
# Load the pathways into a named list
pathways.allergy <- gmtPathways("..\\..\\gsea\\gene_sets\\HP_ALLERGY.v2023.1.Hs.gmt")
# Look at them all if you want (uncomment)
pathways.allergy
# Show the first few pathways, and within those, show only the first few genes.
pathways.allergy %>%
head() %>%
lapply(head)
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
# dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
plotEnrichment(pathways.food_allergy[["HP_FOOD_ALLERGY"]],
ranks)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_resolved_followup_genomewide.csv")
res
# Load package
library(org.Hs.eg.db)
# Convert GeneID column values from numeric to character
res$GeneID <- as.character(res$GeneID)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
id_to_symbol
# Join gene symbol with results table
res_symb <- inner_join(res, id_to_symbol, by=c("GeneID"="ENTREZID"))
res_symb
# Create table with just gene symbol and log2fold change to use for GSEA
res_simp <- res_symb %>%
dplyr::select(SYMBOL, log2FoldChange) %>%
na.omit() %>%
distinct() %>%
group_by(SYMBOL)
res_simp
# Install fgsea package
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
#
# BiocManager::install("fgsea")
library(fgsea)
# Create named vector of gene-level statistics
ranks <- deframe(res_simp)
head(ranks, 20)
# Load the pathways into a named list
pathways.food_int <- gmtPathways("..\\..\\gsea\\gene_sets\\HP_FOOD_INTOLERANCE.v2023.1.Hs.gmt")
# Look at them all if you want (uncomment)
pathways.food_int
# Show the first few pathways, and within those, show only the first few genes.
pathways.food_int %>%
head() %>%
lapply(head)
fgseaRes <- fgsea(pathways=pathways.food_allergy, stats=ranks)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
# dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
fgseaRes <- fgsea(pathways=pathways.food_int, stats=ranks)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
# dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
plotEnrichment(pathways.food_int[["HP_FOOD_INTOLERANCE"]],
ranks)
fgseaRes <- fgsea(pathways=pathways.allergy, stats=ranks)
fgseaResTidy <- fgseaRes %>%
as_tibble() %>%
arrange(desc(NES))
# Show in a nice table:
fgseaResTidy %>%
# dplyr::select(-leadingEdge, -ES, -nMoreExtreme) %>%
arrange(padj) %>%
DT::datatable()
ggplot(fgseaResTidy, aes(reorder(pathway, NES), NES)) +
geom_col(aes(fill=padj<0.05)) +
coord_flip() +
labs(x="Pathway", y="Normalized Enrichment Score",
title="Hallmark pathways NES from GSEA") +
theme_minimal()
plotEnrichment(pathways.allergy[["HP_ALLERGY"]],
ranks)
knitr::opts_chunk$set(echo = TRUE)
res <- read_csv("..\\..\\data\\results\\differential_gene_expression\\activ_pers_vs_resolved_baseline_genomewide.csv")
res
# Convert GeneID column values from numeric to character
res$GeneID <- as.character(res$GeneID)
# Map Entrez gene IDs to gene symbols
id_to_symbol <- AnnotationDbi::select(
org.Hs.eg.db, key=res$GeneID,
columns=c("SYMBOL","GENENAME"), keytype="ENTREZID"
)
id_to_symbol
study_gene_list <- read.table("..\\..\\data\\raw\\study_gene_list.txt")
View(study_gene_list)
study_gene_list_symb
# study_gene_list_symb
source("~/.active-rstudio-document", echo=TRUE)
# Convert GeneID column values from numeric to character
key=study_gene_list$V1 <- as.character(key=study_gene_list$V1)
# Convert GeneID column values from numeric to character
study_gene_list$V1 <- as.character(study_gene_list$V1)
# study_gene_list_symb
# Convert GeneID column values from numeric to character
study_gene_list$V1 <- as.character(study_gene_list$V1)
